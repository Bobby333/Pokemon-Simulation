// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonSimulation.Data;

namespace PokemonSimulation.Migrations
{
    [DbContext(typeof(PokemonSimulationContext))]
    [Migration("20200420211615_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PokemonSimulation.Models.AbilityAssignment", b =>
                {
                    b.Property<int>("AssiggnedAbilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityID")
                        .HasColumnType("int");

                    b.Property<int>("PokedexID")
                        .HasColumnType("int");

                    b.HasKey("AssiggnedAbilityID");

                    b.HasIndex("AbilityID");

                    b.HasIndex("PokedexID");

                    b.ToTable("AbilityAssignment");
                });

            modelBuilder.Entity("PokemonSimulation.Models.Abilitys", b =>
                {
                    b.Property<int>("Id_Ability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ability_Boost")
                        .HasColumnType("int");

                    b.Property<string>("Ability_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ability_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Ability");

                    b.ToTable("Abilitys");
                });

            modelBuilder.Entity("PokemonSimulation.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Item_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Item_boost")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PokemonSimulation.Models.MoveAssignment", b =>
                {
                    b.Property<int>("AssighnedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MoveID")
                        .HasColumnType("int");

                    b.Property<int>("PokedexID")
                        .HasColumnType("int");

                    b.HasKey("AssighnedID");

                    b.HasIndex("MoveID");

                    b.HasIndex("PokedexID");

                    b.ToTable("MoveAssignment");
                });

            modelBuilder.Entity("PokemonSimulation.Models.Moves", b =>
                {
                    b.Property<int>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("Move_Amount")
                        .HasColumnType("int");

                    b.Property<string>("Move_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Move_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Move_Power")
                        .HasColumnType("int");

                    b.Property<string>("Move_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Move_dType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoveId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("PokemonSimulation.Models.Pokedex", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<string>("Pokemon_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SimulationsSimulationID")
                        .HasColumnType("int");

                    b.Property<int>("Special_Attack")
                        .HasColumnType("int");

                    b.Property<int>("Special_Defense")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Type1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PokemonId");

                    b.HasIndex("SimulationsSimulationID");

                    b.ToTable("Pokedex");
                });

            modelBuilder.Entity("PokemonSimulation.Models.Simulations", b =>
                {
                    b.Property<int>("SimulationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SimulationID");

                    b.ToTable("Simulation");
                });

            modelBuilder.Entity("PokemonSimulation.Models.AbilityAssignment", b =>
                {
                    b.HasOne("PokemonSimulation.Models.Abilitys", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonSimulation.Models.Pokedex", "Pokedex")
                        .WithMany("abilitysAssignments")
                        .HasForeignKey("PokedexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonSimulation.Models.MoveAssignment", b =>
                {
                    b.HasOne("PokemonSimulation.Models.Moves", "Move")
                        .WithMany()
                        .HasForeignKey("MoveID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonSimulation.Models.Pokedex", "Pokedex")
                        .WithMany("moveAssignments")
                        .HasForeignKey("PokedexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonSimulation.Models.Pokedex", b =>
                {
                    b.HasOne("PokemonSimulation.Models.Simulations", null)
                        .WithMany("SPokemon")
                        .HasForeignKey("SimulationsSimulationID");
                });
#pragma warning restore 612, 618
        }
    }
}
